<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinninghui.newspiral.ledger.mgr.impl.mapper.StateModelMapper">
  <resultMap id="BaseResultMap" type="com.jinninghui.newspiral.ledger.mgr.impl.domain.StateModel">
    <id column="ID" jdbcType="BIGINT" property="id"/>
    <result column="STATE_KEY" jdbcType="VARCHAR" property="key" />
    <result column="CHANNEL_ID" jdbcType="VARCHAR" property="channelId" />
    <result column="PACK_TIMESTAMP" jdbcType="TIMESTAMP" property="packTimestamp" />
    <result column="LATEST_BLOCK_HASH" jdbcType="VARCHAR" property="latestBlockHash"/>
    <result column="LATEST_BLOCK_HEIGHT" jdbcType="BIGINT" property="latestBlockHeight"/>
    <result column="LATEST_TRANS_HASH" jdbcType="VARCHAR" property="latestTransHash"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jinninghui.newspiral.ledger.mgr.impl.domain.StateModel">
    <result column="STATE_VALUE" jdbcType="BLOB" property="value" typeHandler="org.apache.ibatis.type.ByteArrayTypeHandler"/>
  </resultMap>
  <sql id="Base_Column_List">
    ID,
    CHANNEL_ID,
    STATE_KEY,
    PACK_TIMESTAMP
  </sql>
  <sql id="Blob_Column_List">
    STATE_VALUE
  </sql>

  <sql id="Attach_Column_List">

      (SELECT LATEST_BLOCK_HASH FROM STATE_ATTACH
      where STATE_KEY = #{key,jdbcType=VARCHAR} AND CHANNEL_ID = #{channelId,jdbcType=VARCHAR}) AS LATEST_BLOCK_HASH
      ,
      (SELECT LATEST_BLOCK_HEIGHT FROM STATE_ATTACH
      where STATE_KEY = #{key,jdbcType=VARCHAR} AND CHANNEL_ID = #{channelId,jdbcType=VARCHAR}) AS LATEST_BLOCK_HEIGHT
      ,
      (SELECT LATEST_TRANS_HASH FROM STATE_ATTACH
      where STATE_KEY = #{key,jdbcType=VARCHAR} AND CHANNEL_ID = #{channelId,jdbcType=VARCHAR}) AS LATEST_TRANS_HASH

  </sql>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    <if test="flag">
    ,
    <include refid="Attach_Column_List"/>
    </if>
    from STATE
    where STATE_KEY = #{key,jdbcType=VARCHAR} AND CHANNEL_ID = #{channelId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from STATE
    where CHANNEL_ID = #{channelId,jdbcType=VARCHAR}
  </select>

  <select id="selectAllWorldState" resultMap="ResultMapWithBLOBs">
    select sa.*,s.STATE_VALUE,s.PACK_TIMESTAMP
    from state_attach as sa LEFT OUTER JOIN state as s
    ON sa.STATE_KEY=s.STATE_KEY
    where sa.CHANNEL_ID = #{channelId,jdbcType=VARCHAR}
    and sa.LATEST_BLOCK_HEIGHT &gt;= #{from,jdbcType=BIGINT}
    and sa.LATEST_BLOCK_HEIGHT &lt;= #{to,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey">
    delete from STATE
    where STATE_KEY = #{key,jdbcType=VARCHAR} AND CHANNEL_ID = #{channelId,jdbcType=VARCHAR};
    delete from STATE_ATTACH
    where STATE_KEY = #{key,jdbcType=VARCHAR} AND CHANNEL_ID = #{channelId,jdbcType=VARCHAR};
  </delete>
  <delete id="batchDeleteByPrimaryKey">
    <foreach collection="list" item="record" index="index" separator=";">
    delete from STATE
    where STATE_KEY = #{record.key,jdbcType=VARCHAR} AND CHANNEL_ID = #{record.channelId,jdbcType=VARCHAR};
    delete from STATE_ATTACH
    where STATE_KEY = #{record.key,jdbcType=VARCHAR} AND CHANNEL_ID = #{record.channelId,jdbcType=VARCHAR};
    </foreach>
  </delete>
  <insert id="insert">
    insert into STATE (STATE_KEY, STATE_VALUE, CHANNEL_ID,PACK_TIMESTAMP)
    values (#{record.key,jdbcType=LONGVARCHAR}, #{record.value,jdbcType=LONGVARCHAR},
     #{record.channelId,jdbcType=VARCHAR},#{record.packTimestamp,jdbcType=TIMESTAMP});

    insert into STATE_ATTACH (STATE_KEY, CHANNEL_ID, LATEST_BLOCK_HASH ,LATEST_BLOCK_HEIGHT ,LATEST_TRANS_HASH)
    values  (#{record.key,jdbcType=VARCHAR}, #{record.channelId,jdbcType=VARCHAR},#{record.latestBlockHash,jdbcType=VARCHAR}
      ,#{record.latestBlockHeight,jdbcType=BIGINT},#{record.latestTransHash,jdbcType=VARCHAR});
  </insert>

  <insert id="batchInsert">
    insert into STATE (STATE_KEY, STATE_VALUE, CHANNEL_ID,PACK_TIMESTAMP)
    values
    <foreach collection="list" item="record" index="index" separator=",">
    (#{record.key,jdbcType=VARCHAR}, #{record.value,jdbcType=LONGVARCHAR},
     #{record.channelId,jdbcType=VARCHAR},#{record.packTimestamp,jdbcType=TIMESTAMP})
    </foreach>;
    insert into STATE_ATTACH (STATE_KEY, CHANNEL_ID, LATEST_BLOCK_HASH ,LATEST_BLOCK_HEIGHT ,LATEST_TRANS_HASH)
    values
    <foreach collection="list" item="record" index="index" separator=",">
      (#{record.key,jdbcType=VARCHAR}, #{record.channelId,jdbcType=VARCHAR},#{record.latestBlockHash,jdbcType=VARCHAR}
      ,#{record.latestBlockHeight,jdbcType=BIGINT},#{record.latestTransHash,jdbcType=VARCHAR})
    </foreach>;
  </insert>

  <update id="updateByPrimaryKey">
    update STATE
    set STATE_VALUE = #{record.value,jdbcType=LONGVARCHAR},PACK_TIMESTAMP=#{record.packTimestamp,jdbcType=TIMESTAMP}
    where STATE_KEY = #{record.key,jdbcType=VARCHAR} AND CHANNEL_ID = #{record.channelId,jdbcType=VARCHAR};
    update STATE_ATTACH
    set LATEST_BLOCK_HASH=#{record.latestBlockHash,jdbcType=VARCHAR},LATEST_TRANS_HASH=#{record.latestTransHash,jdbcType=VARCHAR},LATEST_BLOCK_HEIGHT=#{record.latestBlockHeight,jdbcType=BIGINT}
    where STATE_KEY = #{record.key,jdbcType=VARCHAR} AND CHANNEL_ID = #{record.channelId,jdbcType=VARCHAR};
  </update>
  <update id="batchUpdateByPrimaryKey" parameterType="java.util.List">
    <foreach collection="list" item="record" index="index" separator=";">
      update STATE
      set STATE_VALUE = #{record.value,jdbcType=LONGVARCHAR},PACK_TIMESTAMP=#{record.packTimestamp,jdbcType=TIMESTAMP}
      where STATE_KEY = #{record.key,jdbcType=LONGVARCHAR} AND CHANNEL_ID = #{record.channelId,jdbcType=VARCHAR};
      update STATE_ATTACH
      set LATEST_BLOCK_HASH=#{record.latestBlockHash,jdbcType=VARCHAR},LATEST_TRANS_HASH=#{record.latestTransHash,jdbcType=VARCHAR},LATEST_BLOCK_HEIGHT=#{record.latestBlockHeight,jdbcType=BIGINT}
      where STATE_KEY = #{record.key,jdbcType=VARCHAR} AND CHANNEL_ID = #{record.channelId,jdbcType=VARCHAR}
    </foreach>
  </update>
  <delete id="deleteByChannelId">
    delete from STATE
    where  CHANNEL_ID = #{channelId,jdbcType=VARCHAR};
    delete from STATE_ATTACH
    where  CHANNEL_ID = #{channelId,jdbcType=VARCHAR};
  </delete>

  <delete id="deleteByBlockHeight">
    delete STATE from STATE,STATE_ATTACH
    where  STATE.STATE_KEY = STATE_ATTACH.STATE_KEY AND
    STATE_ATTACH.CHANNEL_ID = #{channelId,jdbcType=VARCHAR} AND
    STATE_ATTACH.LATEST_BLOCK_HEIGHT = #{height,jdbcType=BIGINT};
    delete from STATE_ATTACH
    where  CHANNEL_ID = #{channelId,jdbcType=VARCHAR} AND
    LATEST_BLOCK_HEIGHT = #{height,jdbcType=BIGINT};
  </delete>

  <select id="selectCountByTime" resultType="java.lang.Integer">
    select count(1) from  STATE
    where CHANNEL_ID = #{channelId}
    and PACK_TIMESTAMP  <![CDATA[ >= ]]>  #{startTime}
    and PACK_TIMESTAMP  <![CDATA[ <= ]]>  #{endTime};
  </select>


  <select id="selectByTime" resultMap="ResultMapWithBLOBs">
    select
    state.ID,
    state.CHANNEL_ID,
    state.STATE_KEY,
    state.PACK_TIMESTAMP,
    state.STATE_VALUE,
    attach.LATEST_BLOCK_HASH,
    attach.LATEST_BLOCK_HEIGHT,
    attach.LATEST_TRANS_HASH
    from (select ID,CHANNEL_ID,STATE_KEY,PACK_TIMESTAMP,STATE_VALUE
    from STATE
    where CHANNEL_ID = #{channelId}  AND PACK_TIMESTAMP  <![CDATA[ >= ]]>  #{startTime}
    and PACK_TIMESTAMP  <![CDATA[ <= ]]>  #{endTime} order by PACK_TIMESTAMP) as state
    LEFT JOIN   STATE_ATTACH attach on state.channel_id=attach.channel_id and state.state_key=attach.state_key;
  </select>

</mapper>
